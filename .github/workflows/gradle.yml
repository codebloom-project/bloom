# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  #push:
  #  branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    # gradlew 실행 권한 부여
    - name: grant excute for gradlew
      run: chmod +x gradlew
    # 빌드
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2 # v2.6.0
      with:
        arguments: build
    # AWS 사용자 인증 - 아래 참고사이트
    # https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-amazon-elastic-container-service
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    # AWS S3에 업로드
    # https://docs.aws.amazon.com/ko_kr/codedeploy/latest/userguide/application-revisions-push.html
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
          --description "This is a revision for the application my_App" \
          --ignore-hidden-files \
          --s3-location s3://${{ secrets.S3_LOCATION_BUCKET }}/$GITHUB_SHA.zip \
          --source .
          
    # S3 에서 EC2로 배포
    - name: Deploy to EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ secrets.CODEDEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ secrets.S3_LOCATION_BUCKET }},key=$GITHUB_SHA.zip,bundleType=zip
